[
  {
    "objectID": "Final_project.html",
    "href": "Final_project.html",
    "title": "Final project",
    "section": "",
    "text": "Yishan Lin: JHED ID: ylin183; Email: ylin183@jh.edu\nYingqi Wang: JHED ID: ywang911; Email: ywang911@jh.edu\nYiming Ding: JHED ID: yding75; Email: yding75@jh.edu\nRuiqing Cai: JHED ID: rcai9; Email: rcai9@jh.edu"
  },
  {
    "objectID": "Final_project.html#authors-information",
    "href": "Final_project.html#authors-information",
    "title": "Final project",
    "section": "",
    "text": "Yishan Lin: JHED ID: ylin183; Email: ylin183@jh.edu\nYingqi Wang: JHED ID: ywang911; Email: ywang911@jh.edu\nYiming Ding: JHED ID: yding75; Email: yding75@jh.edu\nRuiqing Cai: JHED ID: rcai9; Email: rcai9@jh.edu"
  },
  {
    "objectID": "Final_project.html#data-preparation-and-robust-analysis",
    "href": "Final_project.html#data-preparation-and-robust-analysis",
    "title": "Final project",
    "section": "1. Data Preparation and Robust Analysis",
    "text": "1. Data Preparation and Robust Analysis\n\n\n\n\n\n\nNote\n\n\n\nIn this section, data downloading, processing, and some initial analysis were conducted by using the “functional Programming” Paradigms\n\n\n\n1.1 Download and Initial Cleaning\nData are directly downloaded from the CDC websites. For more information see the code\n\n\nCode\n# Create a folder to store all the data\nif (!dir.exists(\"data\")) { # check if folder already exists\n  dir.create(\"data\")\n}\n\n# Setup function to download the data\ndownload_and_save &lt;- function(url, filename) {\n  filepath &lt;- file.path(\"data\", filename)\n  \n  if (!file.exists(filepath)) { # Check if file already exists\n    message(paste(\"Downloading\", filename, \"...\"))\n    dataset &lt;- read_xpt(url)\n    saveRDS(dataset, filepath)\n  } else {\n    message(paste(filename, \"already exists. Loading from cache.\"))\n  }\n  \n  readRDS(filepath) # Load the dataset\n}\n \n# Function to clean individual datasets\nclean_dataset &lt;- function(data, vars) {\n  data %&gt;% dplyr::select(all_of(vars))\n}\n\n# Selecting data\ndatasets &lt;- list(\n  demo = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/DEMO_L.xpt\",\n    file = \"demo_data.rds\",\n    vars = c(\"SEQN\", \"RIDAGEYR\", \"RIAGENDR\", \"RIDRETH3\")\n  ),\n  diet = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/DR1TOT_L.xpt\",\n    file = \"diet_data.rds\",\n    vars = c(\"SEQN\", \"DR1TSODI\", \"DR1TKCAL\")\n  ),\n  bp = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/BPXO_L.xpt\",\n    file = \"bp_data.rds\",\n    vars = c(\"SEQN\", \"BPXOSY1\", \"BPXOSY2\", \"BPXOSY3\", \"BPXODI1\", \"BPXODI2\", \"BPXODI3\")\n  ),\n  body = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/BMX_L.xpt\",\n    file = \"body_data.rds\",\n    vars = c(\"SEQN\", \"BMXBMI\")\n  ),\n  lab = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/TCHOL_L.xpt\",\n    file = \"lab_data.rds\",\n    vars = c(\"SEQN\", \"LBXTC\")\n  ),\n  ques = list(\n    url = \"https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2021/DataFiles/BPQ_L.xpt\",\n    file = \"ques_data.rds\",\n    vars = c(\"SEQN\", \"BPQ150\")\n  )\n)\n\n# Downloading, saving, and cleaning datasets\nnhanes_data &lt;- purrr::map(datasets, function(info) {\n  raw_data &lt;- download_and_save(info$url, info$file)\n  clean_dataset(raw_data, info$vars)\n})\n\n# Merging into single dataframe\nmerged_data &lt;- purrr::reduce(nhanes_data, dplyr::left_join, by = \"SEQN\")\n\n\n\n\n1.2 Process and Table 1\nTable 1: Characteristics of Study Participants from August 2021 to August 2023\n\n\nCode\n# Function to preprocess data\nprocess_data &lt;- function(data) {\n  data %&gt;%\n    dplyr::mutate(\n      RIAGENDR = dplyr::recode_factor(RIAGENDR, `1` = \"Male\", `2` = \"Female\"),\n      RIDRETH3 = dplyr::recode_factor(\n        RIDRETH3,\n        `1` = \"Mexican American\",\n        `2` = \"Other Hispanic\",\n        `3` = \"Non-Hispanic White\",\n        `4` = \"Non-Hispanic Black\",\n        `6` = \"Other\"\n      ),\n      BPQ150 = dplyr::recode_factor(BPQ150, `1` = \"Yes\", `2` = \"No\"),\n      sybp = rowMeans(select(., BPXOSY1, BPXOSY2, BPXOSY3), na.rm = TRUE),\n      dibp = rowMeans(select(., BPXODI1, BPXODI2, BPXODI3), na.rm = TRUE)\n    )\n}\n\n# Create Table 1 function\ncreate_table1 &lt;- function(data) {\n  table1(~ RIDAGEYR + RIAGENDR + RIDRETH3 + DR1TSODI + BMXBMI + sybp + dibp + \n           BPQ150, data = data)\n}\n\n# Labeling data\nset_labels_and_units &lt;- function(data, labels, units = NULL) {\n  for (var in names(labels)) {\n    label(data[[var]]) &lt;- labels[[var]]\n  }\n  if (!is.null(units)) {\n    for (var in names(units)) {\n      units(data[[var]]) &lt;- units[[var]]\n    }\n  }\n  return(data)\n}\n\n## Define labels and units as named lists\nlabels &lt;- list(\n  RIDAGEYR = \"Age at Screening\",\n  RIAGENDR = \"Gender\",\n  RIDRETH3 = \"Race\",\n  BPQ150 = \"High Blood Pressure Medication\",\n  sybp = \"Systolic Blood Pressure\",\n  dibp = \"Diastolic Blood Pressure\",\n  BMXBMI = \"Body Mass Index\"\n)\n\nunits &lt;- list(\n  RIDAGEYR = \"Year\",\n  sybp = \"mmHg\",\n  dibp = \"mmHg\",\n  BMXBMI = \"kg/m\\u00B2\"\n)\n\n# Apply the data processing function\ncleaned_data &lt;- process_data(merged_data)\n\n# Apply labels and units\ncleaned_data &lt;- set_labels_and_units(cleaned_data, labels, units)\n\n# Generate Table 1\ncreate_table1(cleaned_data)\n\n\n\n\n\n\n\n\n\n\n\nOverall\n(N=11933)\n\n\n\n\nAge at Screening (Year)\n\n\n\nMean (SD)\n38.3 (25.6)\n\n\nMedian [Min, Max]\n37.0 [0, 80.0]\n\n\nGender\n\n\n\nMale\n5575 (46.7%)\n\n\nFemale\n6358 (53.3%)\n\n\nRace\n\n\n\nMexican American\n1117 (9.4%)\n\n\nOther Hispanic\n1373 (11.5%)\n\n\nNon-Hispanic White\n6217 (52.1%)\n\n\nNon-Hispanic Black\n1597 (13.4%)\n\n\nOther\n681 (5.7%)\n\n\nMissing\n948 (7.9%)\n\n\nSodium (mg)\n\n\n\nMean (SD)\n2940 (1610)\n\n\nMedian [Min, Max]\n2660 [0, 20000]\n\n\nMissing\n5239 (43.9%)\n\n\nBody Mass Index (kg/m²)\n\n\n\nMean (SD)\n27.2 (8.14)\n\n\nMedian [Min, Max]\n26.4 [11.1, 74.8]\n\n\nMissing\n3462 (29.0%)\n\n\nSystolic Blood Pressure (mmHg)\n\n\n\nMean (SD)\n119 (18.2)\n\n\nMedian [Min, Max]\n116 [70.0, 232]\n\n\nMissing\n4415 (37.0%)\n\n\nDiastolic Blood Pressure (mmHg)\n\n\n\nMean (SD)\n72.2 (11.5)\n\n\nMedian [Min, Max]\n71.7 [34.0, 139]\n\n\nMissing\n4415 (37.0%)\n\n\nHigh Blood Pressure Medication\n\n\n\nYes\n2442 (20.5%)\n\n\nNo\n523 (4.4%)\n\n\nMissing\n8968 (75.2%)\n\n\n\n\n\n\n\nCode\n# Save cleaned data\nreadr::write_csv(cleaned_data, \"data/NHANES_cleaned_data.csv\")"
  }
]